To modify Instance 1 to conform to Grammar 2, we need to carefully analyze the differences between Grammar 1 and Grammar 2:

### Differences between Grammar 1 and Grammar 2:
1. **Attribute Name Changes**:
   - `image-size` in Grammar 1 was changed to `imageSize` in Grammar 2.
   - `image-channels` in Grammar 1 was changed to `imageChannels` in Grammar 2.
   - `batch-size` in Grammar 1 was changed to `batchSize` in Grammar 2.
   - `output-labels` in Grammar 1 was changed to `outputLabels` in Grammar 2.
   - `caffe-path` in Grammar 1 was made optional as `caffePath` in Grammar 2.
   - `train-data-path` in Grammar 1 was changed to `trainDataPath` in Grammar 2.
   - `val-data-path` in Grammar 1 was changed to `valDataPath` in Grammar 2.
   - `operation` in the `BranchBody` rule was changed to `eltwiseOperation`.

2. **Optional Attributes**:
   - `caffePath` became optional in Grammar 2. 

3. **Other Changes**:
   - None that affect this particular instance.

Based on these differences, let's make the necessary updates to Instance 1 to create Instance 2:

```plaintext
network "DemoNet" {
	epochs = 10
	batchSize = 50
	imageSize = 28
    imageChannels = 1
    outputLabels = 10

    caffePath = "$CAFFE_HOME"
    outputPath = "/media/xpitfire/data/temp"

	updater -> sgd
	learningRate = 0.003

	conv   (name: "c1" in:data out:64)     { kernelSize = 6 }
    conv   (name: "c2" 		   out:32)     { kernelSize = 3 }
	conv   (name: "c3"         out:32)     { kernelSize = 1 }

	branch (name: "b1" in:"c3" out:32)     {
		eltwiseOperation -> PROD
		// 'type -> residual' is omitted as it's not required by Grammar 2.
		
		conv (name: "bc1"      out:32)     { kernelSize = 1 }
		norm (name: "bn1")				   { useGlobalStats = true }
		scale(name: "bs1") 				   { useBiasTerm = true }
	}

	pool   (name: "p1"         out:3)      { type -> MAX, stride = 1 }

	dense [(name: "d1"         out:512), 
	       (name: "d2"         out:256)]

	dense  (name: final-layer  out:labels)
}
```

### Explanation:
- Attributes were renamed to align with the changes in Grammar 2, e.g., `imageSize` instead of `image-size`.
- `eltwiseOperation` replaced `operation` in the `BranchBody`.
- We omitted the optional and made optional in Grammar 2 attributes like `caffePath` or elements in a conditional relationship since they weren't part of Instance 1 and rules don't require them under the transformation constraints.