To modify **Instance 1** so that it follows **Grammar 2**, we'll need to carefully analyze the changes between the two grammar versions and apply those changes to the instance. Let's first identify the key differences between Grammar 1 and Grammar 2, and then modify Instance 1 accordingly:

### Differences:
1. **Field Name Changes**:
   - `batch-size` in Grammar 1 has been changed to `batchSize` in Grammar 2.
   - `image-size` is now `imageSize`.
   - `image-channels` is now `imageChannels`.
   - `output-labels` is now `outputLabels`.
   - `train-data-path` is now `trainDataPath`.
   - `val-data-path` is now `valDataPath`.
   - `caffe-path` is now `caffePath`.
   - `output-path` is now `outputPath`.
   - `kernel-size` in `ConvLayerBody` is now `kernelSize`.
   - `use-global-stats` in `BachNormBody` is now `useGlobalStats`.
   - `use-bias-term` in `ScaleNormBody` is now `useBiasTerm`.
   - `operation` in `BranchBody` is now `eltwiseOperation`.
   - `final-layer` in `LayerName` is now `finalLayer`.

2. **Removal of branch type specification**:
   - The `type` specification in `branchBody` (e.g., `type -> residual`) is not present in Grammar 2.

### Modifications for Instance 1 to Create Instance 2:
- Update the field names in Instance 1 to match the new names in Grammar 2.
- Remove the `type` specification from the `branch` layer.

Here is **Instance 2** after applying these transformations:

```plaintext
network "DemoNet" {
	epochs = 10
	batchSize = 50
	imageSize = 28
    imageChannels = 1
    outputLabels = 10

    caffePath = "$CAFFE_HOME"
    outputPath = "/media/xpitfire/data/temp"

	updater -> sgd
	learningRate = 0.003

	conv   (name: "c1" in:data out:64)     { kernelSize = 6 }
    conv   (name: "c2" 		   out:32)     { kernelSize = 3 }
	conv   (name: "c3"         out:32)     { kernelSize = 1 }

	branch (name: "b1" in:"c3" out:32)     {
		eltwiseOperation -> PROD

		conv (name: "bc1"      out:32)     { kernelSize = 1 }
		norm (name: "bn1")				   { useGlobalStats = true }
		scale(name: "bs1") 				   { useBiasTerm = true }
	}

	pool   (name: "p1"         out:3)      { type -> MAX, stride = 1 }

	dense [(name: "d1"         out:512), 
	       (name: "d2"         out:256)]

	dense  (name: finalLayer  out:labels)
}
```

This updated instance should now conform to Grammar 2.