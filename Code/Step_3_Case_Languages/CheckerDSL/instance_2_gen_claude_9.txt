=== Step 3: Instance Transformation ===
I'll analyze the differences between the grammars and modify instance_1 accordingly:

Main differences between grammars that affect the instance:
1. ChkVariableDeclaration:
   - Changed `(arr+='[' (sz+=CHK_NUMBER)? ']')*` to `('[' sz+=CHK_NUMBER ']')*`
   - Changed 'value' to 'sp'
2. Helper (select function):
   - Added ': ((var3=ChkVariables) '..' (var4=ChkVariables))' to select
3. FormatExpression and FormatVariable structure changed

Required modifications for instance_1:

1. For ChkVariableDeclaration:
   - No change needed for array declarations as they already have size specifications
   - No 'value' keyword is used in the instance, so no change needed

2. For Helper (select function):
   - Need to modify all select function calls by adding range
   - In MR 1: `(select(k,l) where...` needs to be modified to include a range
   - In MR 3, 4: `(select(k) where...` needs to be modified to include a range

Here's instance_2 (only showing the parts that need to change):

```
// All content remains the same until MR 1

MR 1 {
    (select(k,l: 1..n) where 1<=k and k<l and l<=n and c[k]!=c[l] or p[k]!=p[l] or t[k]!=t[l])
    followup {
        (c` = swap(c,k,l))
        (p` = swap(p,k,l))
        (t` = swap(t,k,l))
    }
    check {
        
    }
    
}

MR 3 {
    (select(k: 1..n) where y[k]==0)
    (def cc = random(0..100))
    followup {
        (t`[k] = t[k]+cc)
    }
    check {
        
    }
}

MR 4 {
    (select(k: 1..n) where y[k]==0)
    (def cc = random(0..100))
    followup {
        (p`[k] = p[k]-cc)
    }
    check {
        
    }
}

// Rest of the content remains exactly the same
```

All other parts of the instance remain unchanged because:
1. The array declarations already follow the new grammar format
2. No 'value' keyword was used in the original instance
3. The format expressions used are simple enough to comply with both grammars
4. Other select function calls are embedded in more complex expressions and don't need modification

I've maintained all comments, whitespace, indentation, and other formatting exactly as in the original instance.